### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Class implements Node {
  group: StudentGroup!
  id: String!
  name: String!
  topics(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
    sort: ClassTopicsSortOrder = {key: ORDER, order: ASC}
  ): TopicConnection
}

type ClassConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ClassEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type ClassEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Class
}

enum ClassTopicsOrder {
  ORDER_ASC
  ORDER_DESC
  UPDATED_ASC
  UPDATED_DESC
}

input ClassTopicsSortOrder {
  key: TopicSortKey
  order: TopicSortOrder
}

input CreateClassGroupInput {
  code: String
  id: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

scalar Json

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createClass(group: CreateClassGroupInput!, name: String!): Class
  createTopic(
    """ID of the class create topic into"""
    classId: ID!
    title: String!
  ): Topic
  deleteTopic(
    """ID of the topic to delete"""
    id: ID!
  ): Topic
  reorderTopic(
    """ID of the topic to insert after"""
    after: ID

    """ID of the topic to insert before"""
    before: ID

    """ID of the topic to reorder"""
    id: ID!
  ): Topic
  updateClassName(id: ID!, name: String!): Class
  updateTopic(
    content: JSON

    """ID of the topic"""
    id: ID!
    title: String
  ): Topic
}

interface Node {
  """Resource ID"""
  id: String!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Query {
  class(id: ID!): Class
  classes(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): ClassConnection
  groups(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): StudentGroupConnection
  me: User
  topic(id: ID!): Topic
}

type StudentGroup implements Node {
  code: String!
  id: String!
}

type StudentGroupConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [StudentGroupEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type StudentGroupEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: StudentGroup
}

type Topic implements Node {
  content: Json!
  createdAt: DateTime!
  id: String!
  title: String!
  updatedAt: DateTime!
}

type TopicConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [TopicEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type TopicEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Topic
}

enum TopicSortKey {
  ORDER
  UPDATED
}

"""
Sort direction, ASC = ascending (normal - latest on top), DESC = descending (reverse - oldest on top)
"""
enum TopicSortOrder {
  ASC
  DESC
}

type User implements Node {
  email: String
  id: String!
  image: String
  name: String
}
