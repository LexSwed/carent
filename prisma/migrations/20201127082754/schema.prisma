datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

// https://next-auth.js.org/schemas/adapters#prisma-schema
model Account {
  id                 String    @id @default(cuid())
  compoundId         String    @unique @map(name: "compound_id")
  userId             String    @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  userId       String   @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  teacher Teacher?
  student Student?

  @@map(name: "users")
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}

model Teacher {
  id      String  @id @default(cuid())
  user    User    @relation(fields: [userId], references: [id])
  classes Class[]
  userId  String  @unique @map(name: "user_id")
}

model Class {
  id             String       @id @default(cuid())
  teacher        Teacher      @relation(fields: [teacherId], references: [id])
  name           String
  studentGroup   StudentGroup @relation(fields: [studentGroupId], references: [id])
  topics         Topic[]
  teacherId      String       @map("teacher_id")
  studentGroupId String       @map("student_group_id")
  active         Boolean      @default(true)
}

model Topic {
  id      String  @id @default(cuid())
  title   String
  hidden  Boolean @default(true)
  class   Class   @relation(fields: [classId], references: [id])
  classId String
}

model StudentGroup {
  id       String    @id @default(cuid())
  code     String
  students Student[]
  classes  Class[]
}

model Student {
  id           String         @id @default(cuid())
  user         User           @relation(fields: [userId], references: [id])
  userId       String         @unique @map(name: "user_id")
  studentGroup StudentGroup[]
}
